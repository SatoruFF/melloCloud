name: Build and Deploy

# on:
#   push:
#     tags:
#       - "*"
on:
  push:
    branches:
      - "**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SSHPASS: ${{ secrets.SERVER_PASSWORD }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          sshpass -e ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP bash -c "
          echo ✅ SSH connection successful &&
          cd /home/satoru/melloCloud &&
          # echo ✅ Fixing repository permissions &&
          # sudo chown -R \$(whoami):\$(whoami) .git &&
          # sudo chmod -R 755 .git &&
          echo ✅ Pulling from GitHub &&
          git pull &&
          echo ✅ Pulling new Docker images &&
          docker-compose pull &&
          echo ✅ Restarting services with new images &&
          docker-compose up -d &&
          echo ✅ Cleaning up old images &&
          docker image prune -f &&
          echo ✅ Deployment completed successfully
          "
